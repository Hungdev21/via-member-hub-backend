name: CI/CD with Slack Notifications

on:
  push:
    branches:
      - staging
      - main
      - backend-setup

jobs:
  build:
    name: Build Project
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Example Build Step
        run: |
          echo "üîß Building project..."
          # Thay b·∫±ng l·ªánh build th·ª±c t·∫ø c·ªßa b·∫°n
          # v√≠ d·ª•: npm install && npm run build
          exit 0  # Thay b·∫±ng exit 1 ƒë·ªÉ test l·ªói

  notify:
    name: Notify Slack
    runs-on: [self-hosted, windows]
    needs: build
    if: always()
    steps:
      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          $actor = "${{ github.actor }}"
          $repo = "${{ github.repository }}"
          $branch = "${{ github.ref }}"
          $status = "${{ needs.build.result }}"
          $commitMsg = "${{ github.event.head_commit.message }}"
          $commitHash = "${{ github.event.head_commit.id }}"
          $commitUrl = "https://github.com/$repo/commit/$commitHash"

          if ($status -eq "success") {
            $emoji = "‚úÖ"
            $statusText = "Build th√†nh c√¥ng üéâ"
          } elseif ($status -eq "failure") {
            $emoji = "‚ùå"
            $statusText = "Build th·∫•t b·∫°i üí•"
          } else {
            $emoji = "‚ö†Ô∏è"
            $statusText = "Tr·∫°ng th√°i: $status"
          }

          $payload = @{
            text = "$emoji *CI/CD Th√¥ng b√°o t·ª´ GitHub Actions*\n*Ng∆∞·ªùi th·ª±c hi·ªán:* $actor\n*Repo:* $repo\n*Nh√°nh:* $branch\n*Tin nh·∫Øn:* $commitMsg\n*Commit:* <$commitUrl|$commitHash>\n*Tr·∫°ng th√°i:* $statusText"
          } | ConvertTo-Json -Compress

          Write-Host "G·ª≠i th√¥ng b√°o t·ªõi Slack..."
          Invoke-RestMethod -Uri $env:SLACK_WEBHOOK_URL -Method POST -Body $payload -ContentType 'application/json'
